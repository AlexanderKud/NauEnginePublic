#usda 1.0
(
    """ schema for testing the usdGenSchema
    """
    subLayers = [
        @usd/schema.usda@
    ]
) 

over "GLOBAL" (
    customData = {
        string libraryName       = "NauGuiLib"
        string libraryPath       = "."
        string libraryPrefix     = "Gui"
    }
) {
}

# Base class for all ui elements
class NauGuiNode "NauGuiNode" (
    inherits = </Typed>
 
    customData = {
        string className = "NauGuiNode"
    }
)  
{
    int zOrder = 0;
    bool visible = true;
    int tag = -1;
    string name = "node"

    double2 anchorPoint = (0.5, 0.5);

    double2 position = (0, 0);
    double2 contentSize = (100.0, 100.0);
    double rotation = 0.0;
    double2 scale = (1, 1);

    double2 skew = (0.0, 0.0);
    double2 rotationSkew = (0.0, 0.0);

    color4d colorRGBA = (1,1,1,1);

    bool cascadeColorEnabled = true;
    bool cascadeOpacityEnabled = true;

    bool enableDebugDraw = false;
}

# Class for drawing graphical primitives
class NauGuiDrawNode "NauGuiDrawNode" (
    inherits = </NauGuiNode>

    customData = {
        string className = "NauGuiDrawNode"
    }
)  
{
    # TODO: Add the ability to specify an arbitrary number of points
    # int2[] points

    int2 bottomLeftCorner = (100, 200)
    int2 upperLeftCorner = (100, 400)
    int2 bottomRightCorner = (300, 200)
    int2 upperRightCorner = (300, 400)

    color4d fillColorRGBA = (1,1,1,1)
    color4d borderColorRGBA = (1,1,1,1)

    int borderWidth = 1;

    # TODO: 
    token drawMode = "Polygon" (
        allowedTokens = ["Point", "Points", "Line", "Rect", "Poly", "Circle", 
        "QuadBezier", "CubicBezier", "CardinalSpline", "CatmullRom", "Dot", 
        "SolidRect", "SolidPoly", "SolidCircle", "Segment", "Polygon",
        "Triangle"]
	)
}

# Class for rendering text
class NauGuiLabel "NauGuiLabel" (
    inherits = </NauGuiNode>
 
    customData = {
        string className = "NauGuiLabel"
    }
)  
{
    string text = "Hello NauEngine!";

    # TODO: NAU-2122
    # Update fonts in USD-scheme
    asset Font:font = "asset:content/gui_content/fonts/OpenSans16.fnt.nausd"

    # TODO: 
    int OverflowType = 0;
    int WrappingType = 0;
    int HorizontalAlignmentType = 0;
    int VerticalAlignmentType = 0;
}

# Class for drawing the button
class NauGuiButton "NauGuiButton" (
    inherits = </NauGuiNode>

    customData = {
        string className = "NauGuiButton"
    }
)  
{
    # TODO: NAU-2124
    # Update ui-textures in USD-scheme
    asset Texture:defaultImage = "asset:content/gui_content/Images/Button-default.png.nausd"
    asset Texture:hoveredImage = "asset:content/gui_content/Images/Button-hover.png.nausd"
    asset Texture:clickedImage = "asset:content/gui_content/Images/Button-pressed.png.nausd"
    asset Texture:disableImage = "asset:content/gui_content/Images/Button-disabled.png.nausd"

    color4d defaultColor = (1,1,1,1)
    color4d hoveredColor = (1,1,1,1)
    color4d clickedColor = (1,1,1,1)
    color4d disableColor = (1,1,1,1)

    double defaultScale = 1.0;
    double hoveredScale = 1.0;
    double clickedScale = 1.0;
    double disableScale = 1.0;
}

# Class for ui elements container
class NauGuiLayer "NauGuiLayer" (
    inherits = </NauGuiNode>
 
    customData = {
        string className = "NauGuiLayer"
    }
)  
{
}

# Class for a container of ui elements with scrolling capability 
class NauGuiScroll "NauGuiScroll" (
    inherits = </NauGuiNode>
 
    customData = {
        string className = "NauGuiScroll"
    }
)  
{
    # TODO: NAU-2124
    # Update ui-textures in USD-scheme
    asset Texture:defaultScrollImage = "asset:content/gui_content/Images/Button-pressed.png.nausd"

    double2 contentRootSize = (100.0, 100.0);
    double2 contentRootPosition = (0.0, 0.0);
}

# Class for rendering images
class NauGuiSprite "NauGuiSprite" (
    inherits = </NauGuiNode>
 
    customData = {
        string className = "NauGuiSprite"
    }
)  
{
    # TODO: NAU-2124
    # Update ui-textures in USD-scheme
    asset Texture:texture = "asset:content/gui_content/Images/nau_logo.png.nausd"
}
